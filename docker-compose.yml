
version: '3.7'
services:
  notebook:
    build:
      context: ./jupyter-notebook-docker
    ports:
      - "8889:8888"
    container_name: data-toolbox-notebook
    volumes:
      - /projects/data-engineering/data-lab/upwork/pipeline-security/data-toolbox/notebooks:/notebooks

  postgres: 
    build:
      context: ./postgres-docker
    restart: always
    environment:
      POSTGRES_USER: 'admin'
      POSTGRES_PASSWORD: 'secret'
    ports: 
      - "2345:5432"
    volumes:
      - ./postgres-store:/var/lib/postgresql/data

  # cloud-sql-proxy:
  #     image: gcr.io/cloudsql-docker/gce-proxy:1.11
  #     # Port: MySQL (3306), PostgreSQL (5433)
  #     command: /cloud_sql_proxy -instances=pathao-wallet-production-cloud:asia-east1:elt-staging-1=tcp:0.0.0.0:5432 -credential_file=/root/.config/pathao-wallet-production-cloud-8e7e3c4c5e40.json
  #     volumes:
  #     # this mounts your application default credential on the container, preventing the
  #     # 'invalid json file "/config": google: read JWT from JSON credentials: 'type' field is "authorized_user" (expected "service_account")'
  #     # error if you point to the actual credential file directly
  #     - /home/sirajus.salayhin/redash-latest/config:/root/.config
  #     ports:
  #     - 5432:5432
volumes:
  postgres-store: